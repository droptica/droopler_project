{"version":3,"file":"/components/demo-random-price/demo-random-price.js","mappings":";;;;;AAAA,CAAC,UAAUA,CAAC,EAAEC,MAAM,EAAE;EACpB,YAAY;;EAEZ;AACF;AACA;AACA;AACA;EACEA,MAAM,CAACC,SAAS,CAACC,mBAAmB,GAAG;IACrCC,MAAM,EAAE,SAAAA,OAAUC,OAAO,EAAEC,QAAQ,EAAE;MACnC,IAAIN,CAAC,CAAC,cAAc,EAAEK,OAAO,CAAC,CAACE,MAAM,KAAK,CAAC,EAAE;QAC3CC,WAAW,CAAC,YAAY;UACtB,IAAIC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;UACzE,IAAIC,SAAS,GAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAIN,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;UACjF,IAAIK,MAAM,GAAG,CAAC;UAEd,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,IAAIC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YAC5CF,MAAM,GAAGP,IAAI,CAACW,KAAK,CAAG,CAACZ,MAAM,GAAGW,QAAQ,IAAI,GAAG,GAAIA,QAAQ,GAAI,GAAG,CAAC,GAAG,GAAG;UAC3E;UACAF,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEb,MAAM,CAAC;UAErCc,MAAM,CAACC,QAAQ,CAACf,MAAM,EAAEQ,MAAM,EAAEH,SAAS,EAAE,KAAK,CAAC;QACnD,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC;AAEH,CAAC,EAAEW,MAAM,EAAExB,MAAM,CAAC,C","sources":["webpack://Droopler_theme/./src/components/demo-random-price/demo-random-price.js"],"sourcesContent":["(function ($, Drupal) {\n  'use strict';\n\n  /**\n   * Generate random prices and values of change (percentage) every 5 sec and pass optional css class\n   * to run global function setPrice() which displays those values\n   * in black stripe in d_p_single_text_block paragraphs that contain modifier class \"with-price\"\n   */\n  Drupal.behaviors.d_demo_random_price = {\n    attach: function (context, settings) {\n      if ($('.price-block', context).length !== 0) {\n        setInterval(function () {\n          let number = ((2000 + Math.floor(Math.random() * 1000)) / 100).toFixed(2);\n          let timestamp = (Date.now() / 1000) - Math.floor( Math.random() * 31 * 24 * 3600);\n          let change = 0;\n\n          if (localStorage.getItem('price')) {\n            let oldPrice = localStorage.getItem('price');\n            change = Math.round((((number - oldPrice) * 100) / oldPrice) * 100) / 100;\n          }\n          localStorage.setItem('price', number);\n\n          window.setPrice(number, change, timestamp, 'EUR');\n        }, 5000);\n      }\n    }\n  };\n\n})(jQuery, Drupal);\n"],"names":["$","Drupal","behaviors","d_demo_random_price","attach","context","settings","length","setInterval","number","Math","floor","random","toFixed","timestamp","Date","now","change","localStorage","getItem","oldPrice","round","setItem","window","setPrice","jQuery"],"sourceRoot":""}