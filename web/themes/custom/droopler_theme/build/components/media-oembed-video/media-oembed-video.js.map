{"version":3,"file":"/components/media-oembed-video/media-oembed-video.js","mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEA,CAAC,UAAUA,CAAC,EAAEC,MAAM,EAAE;EAEpB,YAAY;;EAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,qBAAqBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAE/C;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACD,MAAM,GAAGA,MAAM;;IAEpB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACE,QAAQ,GAAGF,MAAM,CAACG,MAAM,CAAC,CAAC;;IAE/B;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAGC,UAAU,CAACL,MAAM,CAACM,IAAI,CAAC,cAAc,CAAC,CAAC;;IAE1D;IACA,IAAI,CAACC,KAAK,CAAC,CAAC;EACd;;EAEA;AACF;AACA;EACER,qBAAqB,CAACS,SAAS,CAACC,YAAY,GAAG,YAAY;IACzD,IAAIC,iBAAiB,GAAG;MACtBC,KAAK,EAAE,IAAI,CAACT,QAAQ,CAACU,UAAU,CAAC,CAAC;MACjCC,MAAM,EAAE,IAAI,CAACX,QAAQ,CAACY,WAAW,CAAC;IACpC,CAAC;IAED,IAAIC,eAAe,GAAG;MACpBJ,KAAK,EAAGD,iBAAiB,CAACC,KAAK,GAAG,IAAI;MACtCE,MAAM,EAAEH,iBAAiB,CAACC,KAAK,GAAG,IAAI,CAACP,WAAW,GAAG;IACvD,CAAC;;IAED;IACA,IAAIY,QAAQ,CAACD,eAAe,CAACF,MAAM,CAAC,GAAGH,iBAAiB,CAACG,MAAM,EAAE;MAC/DE,eAAe,GAAG;QAChBJ,KAAK,EAAGD,iBAAiB,CAACG,MAAM,GAAG,IAAI,CAACT,WAAW,GAAG,IAAI;QAC1DS,MAAM,EAAEH,iBAAiB,CAACG,MAAM,GAAG;MACrC,CAAC;IACH;IAEA,IAAI,CAACb,MAAM,CAACiB,GAAG,CAACF,eAAe,CAAC;EAClC,CAAC;;EAED;AACF;AACA;EACEhB,qBAAqB,CAACS,SAAS,CAACD,KAAK,GAAG,YAAY;IAClD,IAAIW,IAAI,GAAG,IAAI;IAEf,IAAI,CAACT,YAAY,CAAC,CAAC;IACnBZ,CAAC,CAACsB,MAAM,CAAC,CAACC,MAAM,CAAC,YAAY;MAC3BF,IAAI,CAACT,YAAY,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEV,qBAAqB,CAACsB,eAAe,GAAG,YAAY;IAClD,OAAO,IAAItB,qBAAqB,CAACF,CAAC,CAAC,IAAI,CAAC,CAAC;EAC3C,CAAC;EAEDA,CAAC,CAACyB,EAAE,CAACC,qBAAqB,GAAGxB,qBAAqB,CAACsB,eAAe;;EAElE;AACF;AACA;AACA;AACA;EACEvB,MAAM,CAAC0B,SAAS,CAACC,wBAAwB,GAAG;IAC1CC,MAAM,EAAE,SAAAA,OAAUC,OAAO,EAAE;MACzB9B,CAAC,CAAC,2BAA2B,EAAE8B,OAAO,CAAC,CAACC,IAAI,CAAC,YAAY;QACvD/B,CAAC,CAAC,IAAI,CAAC,CAAC0B,qBAAqB,CAAC,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC;AAEH,CAAC,EAAEM,MAAM,EAAE/B,MAAM,CAAC,C","sources":["webpack://Droopler_theme/./src/components/media-oembed-video/media-oembed-video.js"],"sourcesContent":["/**\n * @file\n * Behaviors for embed video.\n */\n\n(function ($, Drupal) {\n\n  'use strict';\n\n  /**\n   * DMediaResponsiveVideo 'class'.\n   *\n   * @param $video\n   *   Video element.\n   * @param settings\n   *   Object with settings to override default with.\n   *\n   * @constructor\n   */\n  function DMediaResponsiveVideo($video, settings) {\n\n    /**\n     * Video object.\n     *\n     * @type {jQuery}\n     */\n    this.$video = $video;\n\n    /**\n     * Video object wrapper.\n     *\n     * @type {jQuery}\n     */\n    this.$wrapper = $video.parent();\n\n    /**\n     * The aspect ratio of this video.\n     *\n     * @type {number}\n     */\n    this.aspectRatio = parseFloat($video.data('aspect-ratio'));\n\n    // Init.\n    this.cover();\n  }\n\n  /**\n   * Set video size bases on parent and video aspect ratio.\n   */\n  DMediaResponsiveVideo.prototype.setVideoSize = function () {\n    var wrapperDimensions = {\n      width: this.$wrapper.outerWidth(),\n      height: this.$wrapper.outerHeight(),\n    };\n\n    var videoDimensions = {\n      width:  wrapperDimensions.width + 'px',\n      height: wrapperDimensions.width * this.aspectRatio + 'px',\n    };\n\n    // The case where the wrapper is higher than video.\n    if (parseInt(videoDimensions.height) < wrapperDimensions.height) {\n      videoDimensions = {\n        width:  wrapperDimensions.height / this.aspectRatio + 'px',\n        height: wrapperDimensions.height + 'px',\n      };\n    }\n\n    this.$video.css(videoDimensions);\n  };\n\n  /**\n   * Make video cover the wrapper.\n   */\n  DMediaResponsiveVideo.prototype.cover = function () {\n    var self = this;\n\n    this.setVideoSize();\n    $(window).resize(function () {\n      self.setVideoSize();\n    });\n  };\n\n  /**\n   * A jQuery interface.\n   *\n   * @param settings\n   *\n   * @returns {jQuery}\n   */\n  DMediaResponsiveVideo.jQueryInterface = function () {\n    return new DMediaResponsiveVideo($(this));\n  };\n\n  $.fn.dMediaResponsiveVideo = DMediaResponsiveVideo.jQueryInterface;\n\n  /**\n   * Drupal behaviors for cover embed video..\n   *\n   * @type {{attach: Drupal.behaviors.d_media_responsive_video.attach}}\n   */\n  Drupal.behaviors.d_media_responsive_video = {\n    attach: function (context) {\n      $('iframe.video-embed--cover', context).each(function () {\n        $(this).dMediaResponsiveVideo();\n      });\n    }\n  };\n\n})(jQuery, Drupal);\n"],"names":["$","Drupal","DMediaResponsiveVideo","$video","settings","$wrapper","parent","aspectRatio","parseFloat","data","cover","prototype","setVideoSize","wrapperDimensions","width","outerWidth","height","outerHeight","videoDimensions","parseInt","css","self","window","resize","jQueryInterface","fn","dMediaResponsiveVideo","behaviors","d_media_responsive_video","attach","context","each","jQuery"],"sourceRoot":""}